#!/bin/python3
#
#
import os
import sys
import logging
import subprocess
import signal
#

logging.basicConfig(filename='jobsubmit.log', filemode='a', format='%(asctime)s - %(process)d - %(levelname)s - %(message)s', datefmt='%d-%b-%y %H:%M:%S', level=logging.INFO)

def usage():
	print("Usage: jobsubmit <scriptname> <args>")
	print("\nOptions:")
	print("<scriptname>\tfile containing list of commands to run.")
	print("<args>\t\tall or empty args - run all commands listed in the file.")
	print("\t\tline1,line2,line3 - runs commands in line # 1, line # 2 and line # 3 from the file.")
	print("\t\tline1-line3 - runs commands from line # 1 to line # 3 from the file.")


if len(sys.argv) < 2 or len(sys.argv) > 3:
	print("=-----------------------------------------=")
	print("CRITICAL : Incorrect Arguments!!");
	print("=-----------------------------------------=")
	usage()
	exit(-1)


#--------------------------------------------------------------------------------------------------------------------------
if len(sys.argv) == 2 or sys.argv[2]== "all":
	print ("type: 1 all ")
	print ("Input File name: ",sys.argv[1])
	ffilename=sys.argv[1]

	filepath,filename=os.path.split(sys.argv[1])
	
	



	try:
		f = open (ffilename, 'r')
		logging.info('--------------------------------')
		logging.info('>>>Program Started')
		logging.info('--------------------------------')
		
		logging.info('Input file found in directory: %s', filepath)
		logging.info('Input file : %s', filename)
		logging.info('Reading input file %s', filename)
		
		counter = 1

		os.makedirs("stdout", exist_ok = True)
		os.makedirs("stderr", exist_ok = True)
		os.makedirs("done", exist_ok = True)

		for job in f:	
			cmd=job.strip()


			fout = open("stdout/"+filename+"_line_"+str(counter)+".out",'w')
			ferr = open("stderr/"+filename+"_line_"+str(counter)+".err",'w')

			proc = subprocess.Popen(cmd,shell=True,stdout=fout,stderr=ferr)
			
			logging.info('Workflow started from %s at line # %d with pid: %d', filename,counter,proc.pid)
			try:			
				proc.wait()
			except KeyboardInterrupt:
				logging.critical('Keyboard intertupt encountered.')
				proc.kill()
				logging.error('Workflow aborted from %s at line # %d due to keyboard interupt', filename,counter)
				logging.info('--------------------------------')
				logging.info('>>>Program Completed')
				logging.info('--------------------------------')
				exit(-1)

			if proc.returncode != 0:
				logging.error('Workflow aborted from %s at line # %d with exit code: %d', filename,counter,proc.returncode)
				
			else:
				logging.info('Workflow completed from %s at line # %d with exit code: %d', filename,counter,proc.returncode)
				fout = open("done/"+filename+"_line_"+str(counter)+".done",'w')
			counter = counter + 1
			
		logging.info('--------------------------------')
		logging.info('>>>Program Completed')
		logging.info('--------------------------------')
			
	except IOError as e:
		print(e)
		#logging.critical('Input file %s not found in directory: %s', filename, filepath)
		



#--------------------------------------------------------------------------------------------------------------------------------------

